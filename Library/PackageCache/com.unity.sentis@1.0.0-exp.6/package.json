{
  "name": "com.unity.sentis",
  "displayName": "Sentis",
  "version": "1.0.0-exp.6",
  "unity": "2021.3",
  "description": "Sentis is lightweight and cross-platform Neural Net inference library. Sentis supports inference both on GPU and CPU.",
  "dependencies": {
    "com.unity.burst": "1.8.4",
    "com.unity.modules.jsonserialize": "1.0.0",
    "com.unity.modules.imageconversion": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Add a custom layer",
      "description": "An example of adding a custom layer to implement a custom ONNX operator.",
      "path": "Samples~/Projects/CustomLayer"
    },
    {
      "displayName": "Check the metadata of a model",
      "description": "An example of checking the metadata of a model.",
      "path": "Samples~/Projects/ModelMetadata"
    },
    {
      "displayName": "Convert tensors to textures",
      "description": "Examples of converting tensors to textures.",
      "path": "Samples~/Projects/TensorToTexture"
    },
    {
      "displayName": "Convert textures to tensors",
      "description": "Examples of converting textures to textures.",
      "path": "Samples~/Projects/TextureToTensor"
    },
    {
      "displayName": "Copy a texture tensor to the screen",
      "description": "An example of using TextureConverter.RenderToScreen to copy a texture tensor to the screen.",
      "path": "Samples~/Projects/RunModelOnFullScreen"
    },
    {
      "displayName": "Do an operation on a tensor",
      "description": "An example of using IOps to do an operation on a tensor.",
      "path": "Samples~/Projects/ExecuteOperatorOnTensor"
    },
    {
      "displayName": "Read output asynchronously",
      "description": "Examples of reading the output from a model asynchronously, using compute shaders or Burst.",
      "path": "Samples~/Projects/AsyncReadback"
    },
    {
      "displayName": "Run a model a layer at a time",
      "description": "An example of using StartManualSchedule to run a model a layer a time.",
      "path": "Samples~/Projects/ModelExecutionInParts"
    },
    {
      "displayName": "Run a model",
      "description": "Examples of running models with different numbers of inputs and outputs.",
      "path": "Samples~/Projects/ModelExecution"
    },
    {
      "displayName": "Use a compute buffer",
      "description": "An example of using a compute shader to write data to a tensor on the GPU.",
      "path": "Samples~/Projects/ComputeBuffer"
    },
    {
      "displayName": "Use Burst to write data",
      "description": "An example of using Burst to write data to a tensor in the Job system.",
      "path": "Samples~/Projects/CSharpJob"
    },
    {
      "displayName": "Use tensor indexing methods",
      "description": "Examples of using tensor indexing methods to get and set tensor values. ",
      "path": "Samples~/Projects/TensorIndexing"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Adding samples in package"
  },
  "upmCi": {
    "footprint": "0bfbefac4b9bae2399ba1b947d94f3f468c62e08"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.sentis@1.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/UnityInferenceEngine.git",
    "type": "git",
    "revision": "7254ee1e27538837d15c427c516ba830233f6c9c"
  }
}
